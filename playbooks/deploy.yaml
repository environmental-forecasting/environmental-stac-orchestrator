# Deploys this codebase architecture onto a Rocky 9 system
- hosts: all
  become: true
  vars:
    repo_url: "https://github.com/environmental-forecasting/environmental-stac-orchestrator.git"
    dest_dir: "/tmp/checkout"
  tasks:
    #    - name: Get the remote username
    #      ansible.builtin.set_fact:
    #        remote_user: "{{ ansible_env.SUDO_USER or ansible_user_id }}"

    - name: Install Open VM Tools (Open source VMWare Tools)
      ansible.builtin.dnf:
        name: open-vm-tools
        state: latest

    - name: Add Docker repository
      ansible.builtin.command: dnf config-manager --add-repo https://download.docker.com/linux/rhel/docker-ce.repo

    - name: Install Docker
      ansible.builtin.dnf:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: latest

    - name: Install other dependencies (Git, Apache, make)
      ansible.builtin.dnf:
        name:
          - git
          - httpd
          - make
        state: latest

    - name: Check docker is active
      ansible.builtin.service:
        name: docker
        state: started
        enabled: yes

    - name: Ensure group "docker" exists
      ansible.builtin.group:
        name: docker
        state: present

    - name: Adding user to docker group
      ansible.builtin.user:
        name: "{{ ansible_user_id }}"
        groups: docker
        append: yes

    - name: Clone environmental-stac-orchestrator repo
      ansible.builtin.git:
        repo: "{{ repo_url }}"
        dest: "{{ dest_dir }}"
        track_submodules: false
        recursive: false
        clone: yes
        update: yes
        force: yes

    - name: Check for .gitmodules
      ansible.builtin.stat:
        path: "{{ dest_dir }}/.gitmodules"
      register: gitmodules_file

    - name: Read .gitmodules content
      ansible.builtin.slurp:
        path: "{{ dest_dir }}/.gitmodules"
      register: gitmodules_raw
      when: gitmodules_file.stat.exists

    - name: Decode .gitmodules content
      set_fact:
        gitmodules_text: "{{ gitmodules_raw.content | b64decode }}"
      when: gitmodules_file.stat.exists

    - name: Rewrite SSH URLs to HTTPS in .gitmodules content
      set_fact:
        updated_gitmodules_text: "{{ gitmodules_text | regex_replace('git@github.com:', 'https://github.com/') }}"
      when: gitmodules_file.stat.exists

    - name: Write updated .gitmodules back to disk
      ansible.builtin.copy:
        dest: "{{ dest_dir }}/.gitmodules"
        content: "{{ updated_gitmodules_text }}"
      when: gitmodules_file.stat.exists

    - name: Sync submodule config
      ansible.builtin.command: git submodule sync
      args:
        chdir: "{{ dest_dir }}"
      when: gitmodules_file.stat.exists

    - name: Initialise and update submodules recursively
      ansible.builtin.command: git submodule update --init --recursive
      args:
        chdir: "{{ dest_dir }}"
      when: gitmodules_file.stat.exists

    # Need to add secrets to set non-default db password which
    # is taken from the `.env` file generated by this script
    - name: Deploy dashboard
      ansible.builtin.command: ./generate_env.sh && make up
      args:
        chdir: "{{ dest_dir }}"

          #- name: Deploy dashboard
          #  community.docker.docker_compose_v2:
          #    project_src: "{{ dest_dir }}"
          #    files: compose.yaml

